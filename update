#!/usr/bin/env ruby
require 'erb'
require 'fileutils'

def build_file(version, data, file)
  File.write(file, ERB.new(File.read("template/#{file}.erb")).result(binding))
end

def build_files(version, installer)
  `git checkout master`
  `git branch -D #{version}`
  `git checkout -b #{version}`
  build_file(version, installer, 'Dockerfile')
  `git add .`
  `git commit --amend --no-edit`
end

VERSIONS = {
  'oracle-8' => {
    'script' => [
      'echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections',
      'echo "deb http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main" | tee /etc/apt/sources.list.d/webupd8team-java.list',
      'echo "deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main" | tee -a /etc/apt/sources.list.d/webupd8team-java.list',
      'apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys EEA14886',
      'apt-get update',
      'apt-get install -y oracle-java8-installer',
      'printf "path-exclude /usr/share/doc/*\npath-exclude /usr/share/man/*\npath-exclude /usr/share/info/*\npath-exclude /usr/share/lintian/*" >> /etc/dpkg/dpkg.cfg.d/nodoc',
      'cd /usr/share && rm -fr doc/* man/* info/* lintian/*',
      'apt-get clean',
      'rm -rf /var/lib/apt/lists/*',
      'rm -rf /var/cache/*',
      'truncate -s 0 /var/log/*log',
    ],
    'env' =>  { 
      'JAVA_HOME' => '/usr/lib/jvm/java-8-oracle'
    }
  }
}

if ARGV[0]
  fail unless VERSIONS[ARGV[0]]
  build_files(ARGV[0],VERSIONS[ARGV[0]])
else
  VERSIONS.each do |version, data|
    build_file(version, data, 'Dockerfile')
  end
end
